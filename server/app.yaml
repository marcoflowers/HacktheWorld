---
- hosts: localhost
  connection: local
  gather_facts: False

  vars:
    region: us-west-1

  tasks:
    - name: create key pair
      ec2_key: 
        name: marcof 
        key_material: "{{item}}"
        region: "{{region}}"
      with_file: ~/.ssh/id_rsa.pub


    - name: add security group
      ec2_group:
        description: security group for sdhacks
        name: sdhacks
        region: "{{region}}"
        rules:
          - proto: tcp
            from_port: 22
            to_port: 22
            cidr_ip: 0.0.0.0/0
          - proto: tcp
            from_port: 80
            to_port: 80
            cidr_ip: 0.0.0.0/0
      register: group
    - debug: var=group

    - name: Provision a set of instances
      ec2:
         key_name: marcof
         region: "{{region}}"
         instance_type: t2.micro
         image:	ami-204e0040
         wait: true
         group: sdhacks
         exact_count: 1
         instance_tags:
             event: sdhacks
         count_tag: event
         user_data: "apt-get update && apt-get install -y --force-yes python"
      register: ec2
    - debug: var=ec2

    - wait_for:
        host: "{{ item.public_ip }}"
        port: 22
      with_items: "{{ ec2.tagged_instances }}"

    - name: Add all instance public IPs to host group
      add_host: hostname={{ item.public_ip }} groups=ec2hosts
      with_items: "{{ ec2.tagged_instances }}"

- hosts: ec2hosts
  user: ubuntu
  become: true
  become_method: sudo
  tasks:
    - name: Install Packages
      apt: name={{ item }} update_cache=yes state=latest
      with_items:
        - build-essential
        - npm
        - nodejs-legacy
        - git
        - nginx
  
    - name: Install pm2
      npm: name=pm2 global=yes production=yes
  
    - name: Create the SSH public key file
      copy: content=~/.ssh/id_rsa.pub dest=/root/.ssh/id_rsa.pub mode=0644
    - name: Copy Private Key
      copy: src=~/.ssh/id_rsa dest=/root/.ssh/id_rsa mode=0600
  
    - name: Git Clone Repo
      git: repo=git@github.com:marcoflowers/HackTheWorld.git dest=/home/ubuntu/app update=yes force=yes accept_hostkey=yes key_file=/root/.ssh/id_rsa
      register: git_finished
  
    - name: Running NPM install
      npm: path=/home/ubuntu/app/server
      register: npm_finished
      when: git_finished.changed
  
    - name: Stop APP
      sudo_user: ubuntu
      command: pm2 stop serverprocess.js chdir=/home/ubuntu/app/server
      ignore_errors: yes
  
    - name: Start APP
      sudo_user: ubuntu
      command: pm2 start server.js --name server chdir=/home/ubuntu/app/server
      ignore_errors: yes
      when: npm_finished.changed
